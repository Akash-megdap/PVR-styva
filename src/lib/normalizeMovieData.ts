// utils/normalizeMovieData.ts
import { BaseMovieDetails } from "@/types/BaseMovieDetails";

export const normalizeMovieData = (movies: any[]): BaseMovieDetails[] => {
  return movies.map((movie) => ({
    FilmCommonName: movie.FilmCommonName,
    directorRating: movie.directorRating,
    directorReason: movie.directorReason,
    actorRating: movie.actorRating,
    actorReason: movie.actorReason,
    producerRating: movie.producerRating,
    producerReason: movie.producerReason,
    musicDirectorRating:
      movie.musicDirectorRating21 || movie.musicDirectorRating,
    musicDirectorReason: movie.musicDirectorReason,
    sentimentScore: movie.sentimentScore,
    sentimentReason: movie.sentimentReason,
    isControversial: movie.isControversial,
    controversialReason: movie.controversialReason,
    isHistoric: movie.isHistoric,
    historicTopic: movie.historicTopic,
    hasStereotypes: movie.hasStereotypes,
    stereotypesReason: movie.stereotypesReason,
    isReligious: movie.isReligious,
    religiousTopic: movie.religiousTopic,
    isPolitical: movie.isPolitical,
    politicalTopic: movie.politicalTopic,
    isSensitive: movie.isSensitive,
    sensitiveReason: movie.sensitiveReason,
    isPatriotic: movie.isPatriotic,
    patrioticTopic: movie.patrioticTopic,
    songsRating: movie.songsRating,
    songReason: movie.songReason,
    audiencePopularityScore: movie.audiencePopularityScore,
    audiencePopularityReason: movie.audiencePopularityReason,
    plotRatingReason: movie.plotRatingReason,
    plotRating: movie.plotRating,
    filmGenre: movie.FilmGenre,
    movie_name: movie.movie_name,
    budget_score: movie.budget_score,
    Total_Score_s6b3: movie.Total_Score_s6b3 ?? movie.Total_Score,
    classification_s6b3:
      movie.classification_s6b3 ?? movie.classification_label,

    FilmName: movie.FilmName,
    FilmId: movie.FilmId,
    FilmCommonCode: movie.FilmCommonCode,
    FilmLang: movie.FilmLang,
    FilmGenre: movie.FilmGenre,
    FilmStars: movie.FilmStars,
    FilmRelDate: movie.FilmRelDate,
    FilmCert: movie.FilmCert,
    FilmDistExh: movie.FilmDistExh,
    FilmFormat: movie.FilmFormat,
    FilmSound: movie.FilmSound,
    FilmSAPId: movie.FilmSAPId,
    FilmRunTime: movie.FilmRunTime,
    ProductionHouse: movie.ProductionHouse,
    FilmPlot: movie.FilmPlot,
    FilmOriginalLang: movie.FilmOriginalLang,
    DubbedLang: movie.DubbedLang,
    Producer: movie.Producer,
    Director: movie.Director,
    IsMetadataFetched: movie.IsMetadataFetched,
    ImdbId: movie.ImdbId,
    InsertedAt: movie.InsertedAt,
    FilmPosterUrl: movie.FilmPosterUrl,
    revenue_label: movie.revenue_label,
  }));
};
